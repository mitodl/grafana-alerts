namespace: heroku-logs
groups:
    - name: all-apps-general
      interval: 30m
      rules:
          - alert: InvalidAccessKeyProduction
            expr: 'sum by (application, environment) (count_over_time({environment=~".*production", application=~".+", application!="dagster", application!="airbyte"} | json |= "InvalidAccessKeyId"[3h])) >= 1'
            for: 1m
            labels:
              severity: critical
            annotations:
                description: An invalid aws key has been detected in {{ $labels.application }} {{ $labels.environment }}.
          - alert: InvalidAccessKeyNonProd
            expr: 'sum by (application, environment) (count_over_time({environment!~".*production", application=~".+", application!="dagster", application!="airbyte"} | json |= "InvalidAccessKeyId"[3h])) >= 1'
            for: 1m
            labels:
              severity: warning
            annotations:
                description: An invalid aws key has been detected in {{ $labels.application }} {{ $labels.environment }}.
          - alert: AlternateInvalidAccessKeyProduction
            expr: 'sum by(application, environment) (count_over_time({environment=~".*production", application=~".+", application!="airbyte"} |= "An error occurred (403) when calling the HeadObject operation: Forbidden" [3h])) >=1'
            for: 1m
            labels:
              severity: critical
            annotations:
                description: An invalid aws key has been detected in {{ $labels.application }} {{ $labels.environment }}.
          - alert: AlternateInvalidAccessKeyNonProd
            expr: 'sum by(application, environment) (count_over_time({environment!~".*production", application=~".+", application!="airbyte"} |= "An error occurred (403) when calling the HeadObject operation: Forbidden" [3h])) >=1'
            for: 1m
            labels:
              severity: warning
            annotations:
                description: An invalid aws key has been detected in {{ $labels.application }} {{ $labels.environment }}.
    - name: bootcamps
      interval: 30m
      rules:
          - alert: BootcampsSAMLIntegrationErrorProd
            expr: 'sum by(application, environment) (count_over_time({environment=~".*production", application=~"bootcamp-ecommerce"} |= "Unable to refresh local metadata" [3h])) >=1'
            for: 1m
            labels:
              severity: critical
            annotations:
              description: The Bootcamps authentication integration with NovoEd is broken. This prevents learners from accessing courses.
    - name: ocw-studio
      interval: 5m
      rules: 
          - alert: OCWStudio3PlayErrorDetectedNonProd
            expr: 'sum by (application, environment) (count_over_time({service="heroku", application="ocw-studio", environment!~".*production"} |= "3Play transcript request failed for video_id" [5m])) >= 1'
            for: 1m
            labels:
              severity: warning
              channel: notifications-ocw-misc
            annotations:
              description: A 3play transcript request has failed in NonProduction.
          - alert: OCWStudio3PlayErrorDetectedProd
            expr: 'sum by (application, environment) (count_over_time({service="heroku", application="ocw-studio", environment=~".*production"} |= "3Play transcript request failed for video_id" [5m])) >= 1'
            for: 1m
            labels:
              severity: warning
              channel: notifications-ocw-misc
            annotations:
              description: A 3play transcript request has failed in Production.
          - alert: OCWStudioContentSyncInvalidPasswordNonProd
            expr: 'sum by (application, environment) (count_over_time({application="ocw-studio", environment!~".*production"} | json | message="Invalid Username and Password"[5m]))'
            for: 1m
            labels:
              severity: warning
            annotations:
              description: An invalid username and password message was detected from content sync. This refer to the password used by OCW to talk to concourse. 
          - alert: OCWStudioContentSyncInvalidPasswordProd
            expr: 'sum by (application, environment) (count_over_time({application="ocw-studio", environment=~".*production"} | json | message="Invalid Username and Password"[5m]))'
            for: 1m
            labels:
              severity: critical
            annotations:
              description: An invalid username and password message was detected from content sync. This refer to the password used by OCW to talk to concourse. 
    - name: keycloak
      rules:
        - alert: KeycloakInternalError
          expr: '{application="keycloak"} |= `HTTP 500 Internal Server Error`'
          labels:
              severity: critical
          for: 1m
          annotations:
              description: Keycloak has responded with a 500 error which is likely caused by a custimization or configuration change.
        - alert: KeycloakSAMLAssertionDecryptError
          expr: '{application="keycloak"} |= `Not possible to decrypt SAML assertion`'
          labels:
              severity: warning
          for: 1m
          annotations:
              description: Keycloak is unable to decrypt a SAML assertion likely caused by an internal or external configuration change.
        - alert: KeycloakServerError
          expr: '{application="keycloak"} |= `Uncaught server error`'
          labels:
              severity: critical
          for: 1m
          annotations:
              description: Keycloak experienced an error condition that is likely the result of a customization.

